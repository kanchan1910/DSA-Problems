class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) 
    {
        int n = nums.size();
        for(int i = 0; i < n; i++)
        {
            nums[i] = nums[i] * nums[i];
        }
        sort(nums.begin(), nums.end());
        return nums;
    }
};
// tc o(nlogn)
// sc o(1)

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) 
    {
        int n = nums.size();
        vector<int>ans(n);
        int k = n - 1, i = 0, j = n - 1;
        while(i <= j)
        {
            if(abs(nums[i]) <= abs(nums[j]))
            {
                ans[k] = nums[j] * nums[j];
                k--;
                j--;
            }
            else
            {
                ans[k] = nums[i] * nums[i];
                k--;
                i++;
            }
        }
        return ans;
    }
};
// tc o(n)
// sc o(n)

https://practice.geeksforgeeks.org/problems/majority-element-1587115620/1#
int majorityElement(int arr[], int n)
    {
        int candidate = 0;
        int count = 0;
        for(int i = 0; i < n; i++)
        {
            if(count == 0)
            {
                candidate = arr[i];
            }
            if(candidate == arr[i])
            {
                count++;
            }
            else
            {
                count--;
            }
        }
        count = 0;
        for(int i = 0; i < n; i++)
        {
            if(candidate == arr[i])
            {
                count++;
            }
        }
        return count > n / 2 ? candidate : -1;
    }
    
    tc o(n) sc o(1)
    
    other solutions were sorting tc o(nlogn) sc o(1) and using extra space of hashmap tc o(n) sc o(n) 

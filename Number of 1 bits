class Solution {
public:
    int hammingWeight(uint32_t n)
    {
        int mask = 1;
        int ans = 0;
        for(int i = 0; i <= 31; i++)
        {
            if(mask & n)
            {
                ans++;
            }
            if(i != 31)
            {
                mask = mask << 1;
            }
        }
        return ans;
    }
};


class Solution {
public:
    int hammingWeight(uint32_t n)
    {
       return __builtin_popcount(n);
    }
};

https://leetcode.com/problems/maximum-subarray/
class Solution {
public:
    int maxSubArray(vector<int>& nums) 
    {
        int n = nums.size();
        int ans = nums[0], cur = nums[0];
        for(int i = 1; i < n; i++)
        {
            cur = max(cur + nums[i], nums[i]);
            ans = max(ans, cur);
        }
        return ans;
    }
};

tc o(n^3) sc o(1) brute force - > tc o(n ^ 2) sc o(1) -> kadanes algorithm tc o(n) sc o(1)

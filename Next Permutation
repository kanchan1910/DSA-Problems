https://leetcode.com/problems/next-permutation/

using direct function: 
class Solution {
public:
    void nextPermutation(vector<int>& nums) 
    {
        next_permutation(nums.begin(), nums.end());
    }
};

brute force : find all permutations o(n! * n) + o(n)

class Solution {
public:
    void nextPermutation(vector<int>& nums) 
    {
        int n = nums.size();
        int i, j;
        for(i = n - 2; i >= 0; i--)
        {
            if(nums[i] < nums[i + 1])
            {
                break;
            }
        }
        if(i == -1)
        {
            reverse(nums.begin(), nums.end());
            return;
        }
        for(j = n - 1; j >= 0; j--)
        {
            if(nums[j] > nums[i])
            {
                break;
            }
        }
        swap(nums[i], nums[j]);
        sort(nums.begin() + i + 1, nums.end());
    }
};
tc o(n) sc o(1)

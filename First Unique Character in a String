class Solution {
public:
    int firstUniqChar(string s) 
    {
        int n = s.length();
        unordered_map<char, int>m;
        for(int i = 0; i < n; i++)
        {
            m[s[i]]++;
        }
        for(int i = 0; i < n; i++)
        {
            if(m[s[i]] == 1)
            {
                return i;
            }
        }
        return -1;
    }
};
// tc o(N)
// sc o(N)


class Solution {
public:
    int firstUniqChar(string s) 
    {
        int n = s.length();
        vector<int>fre(26, 0);
        for(int i = 0; i < n; i++)
        {
            fre[s[i] - 'a']++;
        }
        for(int i = 0; i < n; i++)
        {
            if(fre[s[i] - 'a'] == 1)
            {
                return i;
            }
        }
        return -1;
    }
};
// tc o(N)
// sc o(1)

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
bool isMirror(TreeNode* root1, TreeNode* root2)
{
    if(root1 == NULL && root2 == NULL)
    {
        return true;
    }
    if(root1 == NULL || root2 == NULL)
    {
        return false;
    }
    return root1->val == root2->val && isMirror(root1->left, root2->right) && isMirror(root1->right, root2->left);
}
int Solution::isSymmetric(TreeNode* root) 
{
    return isMirror(root->left, root->right);
}
tc o(n)
sc o(h)

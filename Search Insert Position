class Solution {
public:
    int bs(vector<int>& nums, int target, int n)
    {
        int l = 0, r = n - 1;
        int ans = -1;
        while(l <= r)
        {
            int mid = (l + r) / 2;
            if(nums[mid] == target)
            {
                return mid;
            }
            else if(nums[mid] < target)
            {
                l = mid + 1;
            }
            else if(nums[mid] > target)
            {
                ans = mid;
                r = mid - 1;
            }
        }
        return ans;
    }
    int searchInsert(vector<int>& nums, int target) 
    {
        int n = nums.size();
        int index = bs(nums, target, n);
        return index == -1 ? n : index;
    }
};
// Tc o(logn)
// Sc o(1)

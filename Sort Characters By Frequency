class Solution {
public:
    string frequencySort(string str) 
    {
        int n = str.length();
        unordered_map<char, int>m;
        for(int i = 0; i < n; i++)
        {
            m[str[i]]++;
        }
        string ans(n, ' ');
        int index = 0;
        priority_queue<pair<int, char>>pq;
        for(auto x: m)
        {
            pq.push({x.second, x.first});
        }
        while(!pq.empty())
        {
            pair<int, char>p = pq.top();
            pq.pop();
            while(p.first > 0)
            {
                ans[index++] = (p.second);
                p.first--;
            }
        }
        return ans;
    }
};
// tc o(nlogn)
// sc o(n)

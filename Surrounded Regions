class Solution {
public:
    void dfs(vector<vector<char>>& board, int n, int m, int i, int j, vector<vector<bool>>& vis)
    {
        if(i < 0 || j < 0 || i >= n || j >= m || vis[i][j] == true || board[i][j] == 'X')
        {
            return;
        }
        vis[i][j] = true;
        dfs(board, n, m, i + 1, j, vis);
        dfs(board, n, m, i - 1, j, vis);
        dfs(board, n, m, i, j - 1, vis);
        dfs(board, n, m, i, j + 1, vis);
    }
    void solve(vector<vector<char>>& board) 
    {
        int n = board.size();
        int m = board[0].size();
        vector<vector<bool>>vis(n, vector<bool>(m, false));
        for(int i = 0; i < n; i++)
        {
            if(board[i][0] == 'O' && vis[i][0] == false)
            {
                dfs(board, n, m, i, 0, vis);
            }
        }
        for(int i = 0; i < n; i++)
        {
            if(board[i][m - 1] == 'O' && vis[i][m - 1] == false)
            {
                dfs(board, n, m, i, m - 1, vis);
            }
        }
        for(int j = 0; j < m; j++)
        {
            if(board[0][j] == 'O' && vis[0][j] == false)
            {
                dfs(board, n, m, 0, j, vis);
            }
        }
        for(int j = 0; j < m; j++)
        {
            if(board[n - 1][j] == 'O' && vis[n - 1][j] == false)
            {
                dfs(board, n, m, n - 1, j, vis);
            }
        }
        for(int i = 1; i < n - 1; i++)
        {
            for(int j = 1; j < m - 1; j++)
            {
                if(board[i][j] == 'O' && vis[i][j] == false)
                {
                    board[i][j] = 'X';
                }
            }
        }
    }
};
tc o(n * m)
sc o(n * m)

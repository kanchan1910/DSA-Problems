https://leetcode.com/contest/weekly-contest-265/problems/minimum-operations-to-convert-number/

class Solution {
public:
    int minimumOperations(vector<int>& nums, int start, int goal) 
    {
        int n = nums.size();
        vector<bool>vis(1002, false);
        queue<int>q;
        q.push(start);
        int operations = 0;
        while(!q.empty())
        {
            int sz = q.size();
            while(sz--)
            {
                int front = q.front();
                q.pop();
                if(front == goal)
                {
                    return operations;
                }
                if(front < 0 || front > 1000 || vis[front] == true)
                {
                    continue;
                }
                vis[front] = true;
                for(int i = 0; i < n; i++)
                {
                    int first = front + nums[i];
                    int second = front - nums[i];
                    int third = front ^ nums[i];
                    q.push(first);
                    q.push(second);
                    q.push(third);
                }
            }
            operations++;
        }
        return -1;
    }
};
tc o(n)
sc o(n)
